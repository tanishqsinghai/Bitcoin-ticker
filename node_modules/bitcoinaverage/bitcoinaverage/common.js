'use strict';

const crypto = require('crypto-js');
const request = require('request');

module.exports = {
    getSignature: getSignature,
    getResourceForFullUrl: getResourceForFullUrl
};

function getSignature(publicKey) {
    return {'x-ba-key': publicKey};
}

function defaultErrorHandler(error, response, body){
    if (error){
        console.log("Error in BA request");
        console.log(error);
    }
    if (response){
        console.log("Error in BA response. Status Code: " + response.statusCode + " body: " + body);
    }
}

function getResourceForFullUrl(url, publicKey, handleResponseFunction, errorCallback) {
    var signatureHeader = getSignature(publicKey);
    var options = {
        url: url,
        headers: signatureHeader
    };
    if (!errorCallback){
        errorCallback = defaultErrorHandler;
    }
    request(options, function (error, response, body) {
        if (!error && response.statusCode === 200) {
            handleResponseFunction(body);
        }else {
            errorCallback(error, response, body);
        }
    });
}
